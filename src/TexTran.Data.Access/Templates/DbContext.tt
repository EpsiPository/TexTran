
<#@ template hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Collections.Generic" #>

<#
string contextName = "TexTranContext";
var directory = Path.GetDirectoryName(this.Host.TemplateFile);
var contextFolder = Regex.Replace(directory, "(?<=src).+$", @"\TexTran.Data.Access\Context");
var entityFolder = Regex.Replace(directory,"(?<=src).+$", @"\TexTran.Data.Abstractions\Entities");

/* Get entities */
var entityPaths = Directory.GetFiles(entityFolder);
var entities = entityPaths.Select(x => Path.GetFileName(x));

/* Remove current DbContext before regenerate */
RemoveFilesFromFolder(contextFolder);

var stringBuilder = new StringBuilder();

stringBuilder.AppendLine(@"// This code is auto generated. Changes to this file will be lost!
using Microsoft.EntityFrameworkCore;
using TexTran.Data.Abstractions.Entities;

namespace TextTran.Data.Access.Context
{
	public class TextTranContext : DbContext
	{
		public TextTranContext(DbContextOptions options) : base(options) {{ }}
");

foreach (var item in entities)
{
	var entity = item.Replace(".cs", "");
	stringBuilder.AppendLine($"		public DbSet<{entity}> {entity}s {{ get; set; }}");
}

stringBuilder.AppendLine(@"	}
}");

/* Write to folder */
WriteToFolder(contextFolder, contextName, stringBuilder.ToString());
#>

<#+
/* Methods */

public void WriteToFolder(string folder, string fileName, string content)
{
	using (FileStream fs = new FileStream(Path.Combine(folder, fileName + ".cs"), FileMode.Create))
    {
        using (StreamWriter str = new StreamWriter(fs))
        {
            str.WriteLine(content);
            str.Flush();
        }
    }
}

public void RemoveFilesFromFolder(string path)
{
	Array.ForEach(Directory.GetFiles(path), File.Delete);
}
#>