<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.IO" #>
<#@ include file="TransformModels.tt" #>

<#+ 

public List<EnumDefinition> GenerateEnums(string[] lines)
{
	List<EnumDefinition> result = new List<EnumDefinition>();
	var lineNumber = -1;

	foreach(var line in lines)
	{
		lineNumber++;
		if (String.IsNullOrEmpty(line)) continue;
		
		var match = Regex.Match(line, @"^\s+");

		if(!match.Success)
		{
			var enumDefinition = new EnumDefinition
			{
				Name = line,
				Constants = GetConstants(lineNumber, lines)
			};

			result.Add(enumDefinition);
		}
	}
	return result;
}

public EnumConstantDefinition[] GetConstants(int lineNumber, string[] lines)
{
	List<EnumConstantDefinition> enumConstants = new List<EnumConstantDefinition>();

	for (var i = lineNumber + 1; i < lines.Length; i++)
	{
		var match = Regex.Match(lines[i], @"^\s+(?<name>[^:]+):(?<value>[^\s]+)");

		if (match.Success)
		{
				enumConstants.Add(new EnumConstantDefinition(match.Groups["name"].Value, match.Groups["value"].Value ));
		}
		else
		{
			break;
		}
	}
	return enumConstants.ToArray();
}
#>