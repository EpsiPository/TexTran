<#@ template hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="TransformService.tt" #>

///////////////////////////////////////////////////////////////////////////
//Generated entities are saved in Textran.Data.Abstractions.Models       //
///////////////////////////////////////////////////////////////////////////

<#
var directory = Path.GetDirectoryName(this.Host.TemplateFile);
var entitiesFolder = Regex.Replace(directory, "(?<=src).+$", @"\TexTran.Data.Abstractions\Entities");


/* Load definitions */

string entities = this.Host.ResolvePath(@"..\Definitions\Entities.txt");
var lines = File.ReadLines(entities).ToArray();


/* Clear Entities folder */

RemoveFilesFromFolder(entitiesFolder);

/* Generate Models */

List<ModelDefinition> models = GenerateModels(lines); 

foreach (var model in models)
{
	var builder = new StringBuilder();
	builder.AppendLine("// This file is auto generated. Changes to these files will be lost! ");
	builder.AppendLine("using System;");
	builder.AppendLine("using System.Collections.Generic;");
	builder.AppendLine("");
	builder.AppendLine("namespace TexTran.Data.Abstractions.Entities");
	builder.AppendLine("{");
	builder.AppendLine($"	public class {model.Name}");
	builder.AppendLine("	{");
	foreach (var property in model.Properties)
	{
		builder.AppendLine($"		public {property.Type} {property.Name} {{ get; set; }}");
	}
	builder.AppendLine("	}");
	builder.AppendLine("}");

	/* Write to Entities folder */

	using (FileStream fs = new FileStream(Path.Combine(entitiesFolder, model.Name + ".cs"), FileMode.Create))
    {
        using (StreamWriter str = new StreamWriter(fs))
        {
            str.WriteLine(builder.ToString());
            str.Flush();
        }
    }
}
#>