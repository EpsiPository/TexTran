<#
var contextName = "TexTranContext";

var directory = Path.GetDirectoryName(this.Host.TemplateFile);
var entitiesFolder = Regex.Replace(directory, "(?<=src).+$", @"\TexTran.Data.Abstractions\Entities");
var entityBaseFolder = Regex.Replace(directory, "(?<=src).+$", @"\TexTran.Data.Abstractions\Entities\Base");
var enumsFolder = Regex.Replace(directory, "(?<=src).+$", @"\TexTran.Data.Abstractions\Enums");
var contextFolder = Regex.Replace(directory, "(?<=src).+$", @"\TexTran.Data.Access\Context");
var repositoryFolder = Regex.Replace(directory, "(?<=src).+$", @"\TexTran.Data.Access\Repositories");
var configurationsFolder = Regex.Replace(directory,"(?<=src).+$", @"\TexTran.Data.Access\Configurations");
var repositoryInterfaceFolder = Regex.Replace(directory,"(?<=src).+$", @"\TexTran.Data.Abstractions\Interfaces");
var modelFolder = Regex.Replace(directory,"(?<=src).+$", @"\TexTran.Services.Abstractions\Models");

var entityPaths = Directory.GetFiles(entitiesFolder);
var configurationPaths = Directory.GetFiles(configurationsFolder);

var entityNames = entityPaths.Select(x => Path.GetFileName(x));
var configurations = configurationPaths.Select(x => Path.GetFileName(x));

var entityDefinitions = this.Host.ResolvePath(@"..\Definitions\EntityDefinitions.txt");
var entityLines = File.ReadLines(entityDefinitions).ToArray();

var modelDefinitions = this.Host.ResolvePath(@"..\Definitions\ModelDefinitions.txt");
var modelLines = File.ReadLines(modelDefinitions).ToArray();

string enumsDefinitions = this.Host.ResolvePath(@"..\Definitions\EnumDefinitions.txt");
var enumLines = File.ReadLines(enumsDefinitions).ToArray();
#>